package com.example.demo.controller;

import com.example.demo.dto.ApiResponse;
import com.example.demo.dto.CategoryRequest;
import com.example.demo.dto.CategoryResponse;
import com.example.demo.service.CategoryService;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/categories")
@RequiredArgsConstructor
public class CategoryController {
    private final CategoryService categoryService;

    @GetMapping("/tree")
    public ApiResponse<List<CategoryResponse>> getTree() {
        List<CategoryResponse> tree = categoryService.getCategoryTree();
        ApiResponse<List<CategoryResponse>> res = new ApiResponse<>();
        res.setResult(tree);
        return res;
    }

    @PostMapping
    public ApiResponse<CategoryResponse> create(@RequestBody CategoryRequest req) {
        CategoryResponse dto = categoryService.saveOrUpdate(req);
        ApiResponse<CategoryResponse> res = new ApiResponse<>();
        res.setResult(dto);
        return res;
    }

    @PutMapping("/{id}")
    public ApiResponse<CategoryResponse> update(
            @PathVariable Long id,
            @RequestBody CategoryRequest req) {
        req.setId(id);
        CategoryResponse dto = categoryService.saveOrUpdate(req);
        ApiResponse<CategoryResponse> res = new ApiResponse<>();
        res.setResult(dto);
        return res;
    }

    @DeleteMapping("/{id}")
    public ApiResponse<String> delete(@PathVariable Long id) {
        categoryService.delete(id);
        ApiResponse<String> res = new ApiResponse<>();
        res.setResult("Deleted category " + id);
        return res;
    }
}
// This controller handles CRUD operations for categories, including retrieving the category tree,
// creating, updating, and deleting categories. It uses the CategoryService to perform the business logic
// (comment auto generated by VSCODE)